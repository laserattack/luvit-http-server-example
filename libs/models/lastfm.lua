local httpt = require("http-tools")
local fst = require('fs-tools')
local json = require("json")

---@type function
local pathJoin = require('pathjoin').pathJoin

-- –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞
local jsonContent, err = fst.readFile(pathJoin(module.dir, "lastfm.json"))
if err then
    jsonContent, err = fst.readFile(pathJoin(module.dir, "lastfm-example.json"))
    if err then
        io.write("load config error: ", err, "\n")
        os.exit(1)
    end
end
local config = json.decode(jsonContent)

-- –ü–æ–ª—É—á–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ç—Ä–µ–∫–∞

-- getLastTrackFromLastFM –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞
-- –æ–Ω–∞ –ø–µ—Ä–µ–¥–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é (function(res, err)) –∫–∞–∫ –∫–æ–ª–ª–±–µ–∫ –≤ httpGET –∏ —Å—Ä–∞–∑—É –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è
-- –∞ –≤ httpGET —É–∂–µ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è –≤ event loop —ç—Ç–æ—Ç –∫–æ–ª–ª–±–µ–∫ –≤—ã–∑–æ–≤–µ—Ç—Å—è

local lastTrack = ""
---@param callback function
local function getLastTrackFromLastFM(callback)
    local url = string.format(config.baseUrl, config.username, config.token)
    httpt.httpGET(url, function(res, err)
        -- –í–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ HTTP-–∑–∞–ø—Ä–æ—Å–∞
        if err then
            callback(nil, err)
            return
        end
        -- –û—à–∏–±–∫–∏ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ JSON
        local success, data = pcall(json.decode, res.body)
        if not success then
            callback(nil, "json parse error")
            return
        end
        -- –ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫–æ —Å –æ—Ç–≤–µ—Ç–æ–º (–Ω–µ—Ç –Ω—É–∂–Ω—ã—Ö –ø–æ–ª–µ–π)
        if not data.recenttracks or not data.recenttracks.track or #data.recenttracks.track == 0 then
            callback(nil, "no tracks found")
            return
        end
        -- –ö–æ–ª–ª–±–µ–∫
        local trackName = data.recenttracks.track[1].name
        local artistName = data.recenttracks.track[1].artist["#text"]
        local formatted = string.format("%s - %s", trackName, artistName):gsub("üÖ¥", "[E]")
        callback(formatted, nil)
    end)
end
local function updateLastTrack()
    getLastTrackFromLastFM(function(res, err)
        lastTrack = (not err and res ~= "") and res or lastTrack
    end)
end

return {
    updateLastTrack = updateLastTrack,
    lastTrack = function() return lastTrack end
}